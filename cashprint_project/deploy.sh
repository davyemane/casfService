#!/bin/bash

# Script de d√©ploiement s√©curis√© pour CashPrint
# Ce script garantit que l'application fonctionne apr√®s d√©ploiement

echo "üöÄ D√©ploiement CashPrint..."

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# 1. Migrations de base de donn√©es
echo "üìä Application des migrations..."
python manage.py makemigrations
python manage.py migrate

if [ $? -eq 0 ]; then
    print_status "Migrations appliqu√©es avec succ√®s"
else
    print_error "Erreur lors des migrations"
    exit 1
fi

# 2. Collecte des fichiers statiques (pour production)
if [ "$1" = "production" ]; then
    echo "üìÅ Collecte des fichiers statiques..."
    python manage.py collectstatic --noinput
    print_status "Fichiers statiques collect√©s"
fi

# 3. V√©rification des services existants
echo "üîç V√©rification des services..."
SERVICE_COUNT=$(python manage.py shell -c "from core.models import Service; print(Service.objects.filter(is_active=True).count())")

if [ "$SERVICE_COUNT" = "0" ]; then
    print_warning "Aucun service trouv√©, cr√©ation des donn√©es initiales..."
    
    # Cr√©er les donn√©es initiales
    python manage.py create_initial_data
    
    if [ $? -eq 0 ]; then
        print_status "Donn√©es initiales cr√©√©es avec succ√®s"
    else
        print_error "Erreur lors de la cr√©ation des donn√©es initiales"
        exit 1
    fi
else
    print_status "$SERVICE_COUNT service(s) actif(s) trouv√©(s)"
fi

# 4. Cr√©ation d'un superuser si n√©cessaire (uniquement en d√©veloppement)
if [ "$1" != "production" ]; then
    echo "üë§ V√©rification du superuser..."
    SUPERUSER_EXISTS=$(python manage.py shell -c "from django.contrib.auth.models import User; print(User.objects.filter(is_superuser=True).exists())")
    
    if [ "$SUPERUSER_EXISTS" = "False" ]; then
        print_warning "Aucun superuser trouv√©"
        echo "Voulez-vous cr√©er un superuser? (y/n)"
        read -r response
        if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
            python manage.py createsuperuser
        fi
    else
        print_status "Superuser existant trouv√©"
    fi
fi

# 5. Test de sant√© de l'application
echo "üè• Test de sant√© de l'application..."

# V√©rifier que les mod√®les sont accessibles
python manage.py shell -c "
from core.models import Service, UserProfile, Order
services = Service.objects.filter(is_active=True).count()
print(f'Services actifs: {services}')
if services == 0:
    print('ERREUR: Aucun service actif!')
    exit(1)
else:
    print('‚úÖ Application pr√™te!')
"

if [ $? -eq 0 ]; then
    print_status "Test de sant√© r√©ussi"
else
    print_error "Test de sant√© √©chou√©"
    exit 1
fi

# 6. Instructions finales
echo ""
echo "üéâ D√©ploiement termin√© avec succ√®s!"
echo ""
echo "üìã Prochaines √©tapes:"
echo "   1. D√©marrer le serveur: python manage.py runserver"
echo "   2. Acc√©der √† l'application: http://127.0.0.1:8000/"
echo "   3. Tester la cr√©ation de commande: http://127.0.0.1:8000/orders/new/"
if [ "$1" != "production" ]; then
    echo "   4. Admin Django: http://127.0.0.1:8000/admin/"
fi
echo ""
print_status "Application pr√™te pour utilisation!"